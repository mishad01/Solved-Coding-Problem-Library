class Solution {
public:
    vector<string> findWords(vector<string>& words) {
        vector<string>ans;
        unordered_map<char,int>rows({ //here We defined in which the rows are
            {'z',1},
            {'x',1},
            {'c',1},
            {'v',1},
            {'b',1},
            {'n',1},
            {'m',1},

            {'a',2},
            {'s',2},
            {'d',2},
            {'f',2},
            {'g',2},
            {'h',2},
            {'k',2},
            {'l',2},
            {'j',2},

            {'q',3},
            {'w',3},
            {'e',3},
            {'r',3},
            {'t',3},
            {'y',3},
            {'u',3},
            {'i',3},
            {'o',3},
            {'p',3},
        });

        int num;
        for(auto word : words){
            num = rows[tolower(word[0])]; //Initailaized the fist letter value;
            bool onerow = true;
            for(int i = 1;i<word.size();i++){
                if(rows[tolower(word[i])] != num){ //Now we wil check if all the string map value  matches with num or not
                    onerow = false;
                    break;
                }
            }
            if(onerow == true){
                ans.push_back(word);
            }
        }
        return ans;
    }
};