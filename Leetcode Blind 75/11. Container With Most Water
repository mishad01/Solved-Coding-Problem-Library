#Brute Force 
class Solution {
public:
    int maxArea(vector<int>& height) {
        int n = height.size();
        int maxWater = 0;

        for(int i = 0;i<n;i++){
            for(int j =i+1;j<n;j++){
                int w = j-i;
                int ht = min(height[i],height[j]);
                int currWater = w*ht;
                maxWater = max(maxWater,currWater);
            }
        }
        return maxWater;
    }      
};

//Optimized
class Solution {
public:
    int maxArea(vector<int>& height) {
        int n = height.size();
        int maxWater = 0;
        int l = 0, r = n-1;
        while(l<r){
            int w = r-l;
            int ht = min(height[l],height[r]);
            int currWater = w*ht;
            maxWater = max(maxWater,currWater); 
            if(height[l]<height[r]){
                l++;
            }else{
                r--;
            }

        }
        return maxWater;
    }
};