class Solution {
public:
    bool dfs(int i, int j, int ind, vector<vector<char>>& board,string word){
        int n = board.size();
        int m = board[0].size();

        if(word.size()==ind) return true;
        if(i<0||i>=n||j<0||j>=m||board[i][j]!=word[ind]||board[i][j]=='*') return false;

       char temp=board[i][j];
       board[i][j]='*';
       bool ans = (dfs(i+1,j,ind+1,board,word)||
        dfs(i-1,j,ind+1,board,word)||
        dfs(i,j+1,ind+1,board,word)||
        dfs(i,j-1,ind+1,board,word));

        board[i][j]=temp;
        return ans;

    }
    bool exist(vector<vector<char>>& board, string word) {
        int row = board.size();
        int col = board[0].size();
        for(int i = 0;i<row;i++){
            for(int j = 0;j<col;j++){
                if(board[i][j]==word[0] && dfs(i,j,0,board,word)){
                    return true;
                }
            }
        }
        return false;
    }
};